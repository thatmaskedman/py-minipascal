<program>  ::= program <identifier> ; <block>  . 
<block>  ::= <variable declaration part>    
<statement part>  
 
<variable declaration part> ::= <empty> |  
var <variable declaration> ;  
    { <variable declaration> ; }  
<variable declaration> ::= <identifier > { , <identifier> } : <type> 
<type> ::= Integer | Real | String   
<statement part> ::= <compound statement> 
<compound statement> ::= begin <statement>{ ; <statement> } end 
<statement> ::= <simple statement> | <structured statement>  


<simple statement> ::= <assignment statement> |  
<read statement> | <write statement>  
<assignment statement> ::= <variable> := <expression>  
<read statement> ::= read ( <input variable> { , <input variable> } ) 
<input variable> ::= <variable>  
<write statement> ::= write ( <output value> { , <output value> } ) 
<output value> ::= <expression>  
<structured statement> ::= <compound statement> | <if statement> |  
<while statement>  

<if statement> ::= if <expression> then <statement> |  
if <expression> then <statement> else <statement> 

<while statement> ::= while <expression> do <statement>  
 
<expression> ::= <simple expression> |  
<simple expression> <relational operator> <simple expression>  
<simple expression> ::= <sign> <term> { <adding operator> <term> } 
<term> ::= <factor> { <multiplying operator> <factor> } 
<factor> ::= <variable> | <constant> | ( <expression> ) | not <factor>  
 
<relational operator> ::= = | <> | < | <= | >= | > 
<sign> ::= + | - | <empty>  
<adding operator> ::= + | - | or 
<multiplying operator> ::= * |  div | and 

<variable> ::= <entire variable>   
<entire variable> ::= <variable identifier>  

<variable identifier> ::= <identifier>  
